{"version":3,"sources":["components/login.component.js","components/signup.component.js","components/data.js","components/home.component.js","App.js","serviceWorker.js","index.js"],"names":["Login","className","type","placeholder","id","htmlFor","href","Component","SignUp","flowers","name","picture","Home","Container","fluid","Row","map","flower","Col","sm","Image","src","rounded","App","Navbar","expand","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8PAEqBA,E,4JACjB,WACI,OACI,iCACI,yCAEA,sBAAKC,UAAU,aAAf,UACI,kDACA,uBAAOC,KAAK,QAAQD,UAAU,eAAeE,YAAY,mBAG7D,sBAAKF,UAAU,aAAf,UACI,6CACA,uBAAOC,KAAK,WAAWD,UAAU,eAAeE,YAAY,sBAGhE,qBAAKF,UAAU,aAAf,SACI,sBAAKA,UAAU,iCAAf,UACI,uBAAOC,KAAK,WAAWD,UAAU,uBAAuBG,GAAG,iBAC3D,uBAAOH,UAAU,uBAAuBI,QAAQ,eAAhD,8BAIR,wBAAQH,KAAK,SAASD,UAAU,4BAAhC,oBACA,oBAAGA,UAAU,6BAAb,oBACW,mBAAGK,KAAK,IAAR,iC,GAzBQC,aCAdC,E,4JACjB,WACI,OACI,iCACI,yCAEA,sBAAKP,UAAU,aAAf,UACI,+CACA,uBAAOC,KAAK,OAAOD,UAAU,eAAeE,YAAY,kBAG5D,sBAAKF,UAAU,aAAf,UACI,8CACA,uBAAOC,KAAK,OAAOD,UAAU,eAAeE,YAAY,iBAG5D,sBAAKF,UAAU,aAAf,UACI,kDACA,uBAAOC,KAAK,QAAQD,UAAU,eAAeE,YAAY,mBAG7D,sBAAKF,UAAU,aAAf,UACI,6CACA,uBAAOC,KAAK,WAAWD,UAAU,eAAeE,YAAY,sBAGhE,wBAAQD,KAAK,SAASD,UAAU,4BAAhC,qBACA,oBAAGA,UAAU,6BAAb,gCACuB,mBAAGK,KAAK,WAAR,gC,GA5BHC,a,QC6GrBE,EA/GD,CACV,CACIC,KAAM,SACNC,QAAS,6DAEb,CACID,KAAM,UACNC,QAAS,8DAEb,CACID,KAAM,YACNC,QAAS,gEAEb,CACID,KAAM,QACNC,QAAS,4DAEb,CACID,KAAM,SACNC,QAAS,6DAEb,CACID,KAAM,UACNC,QAAS,8DAEb,CACID,KAAM,YACNC,QAAS,gEAEb,CACID,KAAM,UACNC,QAAS,8DAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,YACNC,QAAS,gEAEb,CACID,KAAM,SACNC,QAAS,6DAEb,CACID,KAAM,iBACNC,QAAS,oEAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,SACNC,QAAS,6DAEb,CACID,KAAM,QACNC,QAAS,4DAEb,CACID,KAAM,YACNC,QAAS,gEAEb,CACID,KAAM,UACNC,QAAS,8DAEb,CACID,KAAM,OACNC,QAAS,2DAEb,CACID,KAAM,QACNC,QAAS,4DAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,SACNC,QAAS,6DAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,YACNC,QAAS,gEAEb,CACID,KAAM,WACNC,QAAS,+DAEb,CACID,KAAM,QACNC,QAAS,4DAEb,CACID,KAAM,SACNC,QAAS,8D,wBCnGIC,E,4JACjB,WACI,OACE,mCACA,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACE,cAACC,EAAA,EAAD,UACE,4CAEF,cAACA,EAAA,EAAD,UACGN,EAAQO,KAAI,SAACC,GAAD,OACX,eAACC,EAAA,EAAD,CAAKC,IAAE,EAAP,UACE,cAACC,EAAA,EAAD,CAAOC,IAAKJ,EAAON,QAASG,OAAK,EAACQ,SAAO,IACzC,6BAAKL,EAAOP,wB,GAZIH,a,QC6CnBgB,MA5Cf,WACE,OAAQ,cAAC,IAAD,UACN,sBAAKtB,UAAU,MAAf,UACE,cAACuB,EAAA,EAAD,CAAQvB,UAAU,iDAAiDwB,OAAO,KAA1E,SACE,sBAAKxB,UAAU,YAAf,UAGE,cAAC,IAAD,CAAMA,UAAU,eAAeyB,GAAI,QAAnC,kCAEA,qBAAKzB,UAAU,2BAA2BG,GAAG,wBAAwB,gBAAc,mBAAnF,SAEE,qBAAIH,UAAU,qBAAd,UACA,oBAAIA,UAAU,WAAd,SAEA,cAAC,IAAD,CAAMA,UAAU,WAAWyB,GAAI,QAA/B,oBAGE,oBAAIzB,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWyB,GAAI,WAA/B,qBAEF,oBAAIzB,UAAU,WAAd,SACE,cAAC,IAAD,CAAMA,UAAU,WAAWyB,GAAI,WAA/B,iCASV,qBAAKzB,UAAU,eAAf,SACE,qBAAKA,UAAU,aAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,IAAIC,UAAWjB,IACjC,cAAC,IAAD,CAAOgB,KAAK,WAAWC,UAAW7B,IAClC,cAAC,IAAD,CAAO4B,KAAK,WAAWC,UAAWrB,IAClC,cAAC,IAAD,CAAOoB,KAAK,QAAQC,UAAWjB,iBClCvBkB,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCVRC,IAASC,OACL,cAAC,IAAD,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SDuHpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAAC,GACHC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7cbaabbd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Login extends Component {\r\n    render() {\r\n        return (\r\n            <form>\r\n                <h3>Sign In</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\r\n                <p className=\"forgot-password text-right\">\r\n                    Forgot <a href=\"#\">password?</a>\r\n                </p>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class SignUp extends Component {\r\n    render() {\r\n        return (\r\n            <form>\r\n                <h3>Sign Up</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>First name</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"First name\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Last name</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                <p className=\"forgot-password text-right\">\r\n                    Already registered <a href=\"/sign-in\">sign in?</a>\r\n                </p>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n","let flowers = [\r\n    {\r\n        name: \"Acacia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/acacia.jpg\"\r\n    },\r\n    {\r\n        name: \"Alyssum\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/alyssum.jpg\"\r\n    },\r\n    {\r\n        name: \"Amaryllis\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/amaryllis.jpg\"\r\n    },\r\n    {\r\n        name: \"Aster\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/aster.jpg\"\r\n    },\r\n    {\r\n        name: \"Azalea\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/azalea.jpg\"\r\n    },\r\n    {\r\n        name: \"Begonia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/begonia.jpg\"\r\n    },\r\n    {\r\n        name: \"Buttercup\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/buttercup.jpg\"\r\n    },\r\n    {\r\n        name: \"Calluna\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/calluna.jpg\"\r\n    },\r\n    {\r\n        name: \"Camellia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/camellia.jpg\"\r\n    },\r\n    {\r\n        name: \"Cardinal\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/cardinal.jpg\"\r\n    },\r\n    {\r\n        name: \"Carnation\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/carnation.jpg\"\r\n    },\r\n    {\r\n        name: \"Clover\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/clover.jpg\"\r\n    },\r\n    {\r\n        name: \"Crown Imperial\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/crownimperial.jpg\"\r\n    },\r\n    {\r\n        name: \"Daffodil\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/daffodil.jpg\"\r\n    },\r\n    {\r\n        name: \"Dahlia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/dahlia.jpg\"\r\n    },\r\n    {\r\n        name: \"Daisy\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/daisy.jpg\"\r\n    },\r\n    {\r\n        name: \"Gladiolus\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/gladiolus.jpg\"\r\n    },\r\n    {\r\n        name: \"Lantana\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lantana.jpg\"\r\n    },\r\n    {\r\n        name: \"Lily\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lily.jpg\"\r\n    },\r\n    {\r\n        name: \"Lotus\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/lotus.jpg\"\r\n    },\r\n    {\r\n        name: \"Marigold\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/Marigold.jpg\"\r\n    },\r\n    {\r\n        name: \"Orchid\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/orchid.jpg\"\r\n    },\r\n    {\r\n        name: \"Primrose\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/primrose.jpg\"\r\n    },\r\n    {\r\n        name: \"Sunflower\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/sunflower.jpg\"\r\n    },\r\n    {\r\n        name: \"Tickseed\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/tickseed.jpg\"\r\n    },\r\n    {\r\n        name: \"Tulip\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/tulip.jpg\"\r\n    },\r\n    {\r\n        name: \"Zinnia\",\r\n        picture: \"https://habahram.blob.core.windows.net/flowers/zinnia.jpg\"\r\n    }\r\n];\r\n\r\nexport default flowers;","import React, { Component } from \"react\";\r\nimport Image from 'react-bootstrap/Image';\r\nimport flowers from \"./data\";\r\n// import Table from 'react-bootstrap/Table';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n          <>\r\n          <Container fluid>\r\n            <Row>\r\n              <h1>Welcome!</h1>\r\n            </Row>\r\n            <Row>\r\n              {flowers.map((flower) => (\r\n                <Col sm>\r\n                  <Image src={flower.picture} fluid rounded />\r\n                  <h2>{flower.name}</h2>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n            </Container>\r\n          </>\r\n\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Login from \"./components/login.component\";\r\nimport SignUp from \"./components/signup.component\";\r\nimport Home from \"./components/home.component\";\r\nimport { Nav, Navbar} from 'react-bootstrap'\r\n\r\nfunction App() {\r\n  return (<Router>\r\n    <div className=\"App\">\r\n      <Navbar className=\"navbar navbar-expand-lg navbar-light fixed-top\" expand=\"lg\">\r\n        <div className=\"container\">\r\n\r\n\r\n          <Link className=\"navbar-brand\" to={\"/home\"}>&#127800; Flowers</Link>\r\n\r\n          <div className=\"navbar-collapse collapse\" id=\"responsive-navbar-nav\" aria-controls=\"basic-navbar-nav\">\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n\r\n            <Link className=\"nav-link\" to={\"/home\"}>Home</Link>\r\n\r\n            </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={\"/sign-in\"}>Login</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={\"/sign-up\"}>Sign up</Link>\r\n              </li>\r\n            </ul>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </Navbar>\r\n      <div className=\"auth-wrapper\">\r\n        <div className=\"auth-inner\">\r\n          <Switch>\r\n            <Route exact path='/' component={Home} />\r\n            <Route path=\"/sign-in\" component={Login} />\r\n            <Route path=\"/sign-up\" component={SignUp} />\r\n            <Route path=\"/home\" component={Home} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </div></Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service '\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all '\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n            headers: {\r\n                'Service-Worker': 'script'\r\n            },\r\n        })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}